{"ast":null,"code":"var _jsxFileName = \"/home/dellvostro253/Desktop/redux/src/Components/postInfo.js\";\nimport React from 'react';\nimport './style.css';\nimport service from '../Service/service';\nimport { getAllUsers } from '../Actions/userAction';\nimport { connect } from 'react-redux';\n\nclass PostInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false\n    };\n  }\n\n  async componentDidMount() {\n    //let post = this.context.activePost;\n\n    /*if(!this.state.post && post) {\n        this.setState({\n            post,\n            isLoaded: true \n       })\n    } else{\n        const postData = await axios.get(`https://jsonplaceholder.typicode.com/posts/${matchParams.postId}`)\n        post = postData.data\n    }*/\n    try {\n      const users = await service.getAllUsers();\n      this.props.getUsers(users);\n      this.setState({\n        isLoaded: true\n      });\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  render() {\n    let {\n      isLoaded\n    } = this.state;\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Loading..\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"About Post:\"), React.createElement(\"p\", {\n        className: \"post-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.state.post.body)), React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"About User\"), React.createElement(\"ul\", {\n        className: \"user-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"ID\"), this.state.user.id), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Name\"), this.state.user.name), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Username\"), this.state.user.username), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Email\"), this.state.user.email))));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  users: state.usersRequestResults.users\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getUsers: users => {\n    dispatch(getAllUsers(users));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostInfo);","map":{"version":3,"sources":["/home/dellvostro253/Desktop/redux/src/Components/postInfo.js"],"names":["React","service","getAllUsers","connect","PostInfo","Component","constructor","props","state","isLoaded","componentDidMount","users","getUsers","setState","error","Error","render","post","body","user","id","name","username","email","mapStateToProps","usersRequestResults","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAAQC,WAAR,QAA0B,uBAA1B;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAGC,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AAIpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AAED,QAAMC,iBAAN,GAA0B;AACtB;;AAGA;;;;;;;;;AASD,QAAI;AACC,YAAMC,KAAK,GAAG,MAAMV,OAAO,CAACC,WAAR,EAApB;AACA,WAAKK,KAAL,CAAWK,QAAX,CAAoBD,KAApB;AACA,WAAKE,QAAL,CAAc;AACVJ,QAAAA,QAAQ,EAAE;AADA,OAAd;AAGH,KANF,CAMG,OAAMK,KAAN,EAAa;AACX,YAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACH;AACJ;;AAEDE,EAAAA,MAAM,GAAG;AACL,QAAI;AAAEP,MAAAA;AAAF,QAAe,KAAKD,KAAxB;;AACA,QAAG,CAACC,QAAJ,EAAc;AACV,aAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAN;AACH,KAFD,MAEO;AACH,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0B,KAAKD,KAAL,CAAWS,IAAX,CAAgBC,IAA1C,CAFJ,CADJ,EAKI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEC;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAJ,EAAc,KAAKV,KAAL,CAAWW,IAAX,CAAgBC,EAA9B,CADP,EAEO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAJ,EAAgB,KAAKZ,KAAL,CAAWW,IAAX,CAAgBE,IAAhC,CAFP,EAGO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAJ,EAAoB,KAAKb,KAAL,CAAWW,IAAX,CAAgBG,QAApC,CAHP,EAIO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAJ,EAAiB,KAAKd,KAAL,CAAWW,IAAX,CAAgBI,KAAjC,CAJP,CAFD,CALJ,CADJ;AAiBH;AACJ;;AA1DmC;;AA8DxC,MAAMC,eAAe,GAAGhB,KAAK,KAAK;AAC9BG,EAAAA,KAAK,EAAEH,KAAK,CAACiB,mBAAN,CAA0Bd;AADH,CAAL,CAA7B;;AAGA,MAAMe,kBAAkB,GAAGC,QAAQ,KAAK;AACpCf,EAAAA,QAAQ,EAAGD,KAAD,IAAW;AACjBgB,IAAAA,QAAQ,CAACzB,WAAW,CAACS,KAAD,CAAZ,CAAR;AACH;AAHmC,CAAL,CAAnC;;AAMA,eAAeR,OAAO,CAACqB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CtB,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport './style.css';\nimport service from '../Service/service';\nimport {getAllUsers} from '../Actions/userAction';\nimport {connect} from 'react-redux';\n\n\n class PostInfo extends React.Component {\n\n    \n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: false\n        }\n    }\n\n    async componentDidMount() {\n        //let post = this.context.activePost;\n        \n\n        /*if(!this.state.post && post) {\n            this.setState({\n                post,\n                isLoaded: true \n           })\n       } else{\n            const postData = await axios.get(`https://jsonplaceholder.typicode.com/posts/${matchParams.postId}`)\n            post = postData.data\n       }*/\n       try {\n            const users = await service.getAllUsers();\n            this.props.getUsers(users);\n            this.setState({\n                isLoaded: true\n            })\n        } catch(error) {\n            throw new Error(error); \n        }\n    }\n\n    render() {\n        let { isLoaded } = this.state;\n        if(!isLoaded) {\n            return<div>Loading..</div>\n        } else {\n            return (\n                <div>\n                    <div className=\"card\">\n                        <h2>About Post:</h2> \n                        <p className='post-info'>{this.state.post.body}</p>\n                    </div>\n                    <div className=\"card\">\n                        <h2>About User</h2>\n                     <ul className=\"user-info\">\n                            <li><p>ID</p>{this.state.user.id}</li>\n                            <li><p>Name</p>{this.state.user.name}</li>\n                            <li><p>Username</p>{this.state.user.username}</li>\n                            <li><p>Email</p>{this.state.user.email}</li>\n                        </ul>\n                    </div>\n                </div>\n             )\n        }\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    users: state.usersRequestResults.users\n});\nconst mapDispatchToProps = dispatch => ({\n    getUsers: (users) => {\n        dispatch(getAllUsers(users));\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostInfo);"]},"metadata":{},"sourceType":"module"}