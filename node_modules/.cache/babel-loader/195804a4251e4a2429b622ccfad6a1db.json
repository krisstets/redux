{"ast":null,"code":"var _jsxFileName = \"/home/dellvostro253/Desktop/redux/src/Components/postsList.js\";\nimport React from 'react';\nimport service from '../Service/service';\nimport { getAllPosts } from '../Actions/postAction';\nimport { connect } from \"react-redux\";\n\nclass PostsList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false\n    };\n  }\n\n  async componentDidMount() {\n    let posts = null;\n    posts = await service.getAllPosts();\n    console.log(posts);\n    this.props.getPosts(posts);\n    this.setState({\n      isLoaded: true\n    });\n  }\n\n  render() {\n    let {\n      isLoaded\n    } = this.state;\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Loading..\");\n    } else {\n      return React.createElement(\"table\", {\n        className: \"posts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"PostID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"UserID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Description\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, this.props.posts.map(post => {\n        const {\n          id,\n          userId,\n          title\n        } = post;\n        return React.createElement(\"tr\", {\n          key: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, userId), React.createElement(\"td\", {\n          className: \"post-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, title));\n      })));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  posts: state.postsRequestResults.posts\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getPosts: posts => {\n    dispatch(getAllPosts(posts));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostsList);","map":{"version":3,"sources":["/home/dellvostro253/Desktop/redux/src/Components/postsList.js"],"names":["React","service","getAllPosts","connect","PostsList","Component","constructor","props","state","isLoaded","componentDidMount","posts","console","log","getPosts","setState","render","map","post","id","userId","title","mapStateToProps","postsRequestResults","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAGA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AAEpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AAED,QAAMC,iBAAN,GAA0B;AAEtB,QAAIC,KAAK,GAAG,IAAZ;AACAA,IAAAA,KAAK,GAAG,MAAMV,OAAO,CAACC,WAAR,EAAd;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAKJ,KAAL,CAAWO,QAAX,CAAoBH,KAApB;AACA,SAAKI,QAAL,CAAc;AAAEN,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AACH;;AAEDO,EAAAA,MAAM,GAAG;AACL,QAAI;AAAEP,MAAAA;AAAF,QAAe,KAAKD,KAAxB;;AACA,QAAI,CAACC,QAAL,EAAe;AACX,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACH,KAFD,MAGK;AACD,aAAQ;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHJ,CADJ,CADI,EAQJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKF,KAAL,CAAWI,KAAX,CAAiBM,GAAjB,CAAqBC,IAAI,IAAI;AAC1B,cAAM;AAAEC,UAAAA,EAAF;AAAMC,UAAAA,MAAN;AAAcC,UAAAA;AAAd,YAAwBH,IAA9B;AACA,eAAQ;AAAI,UAAA,GAAG,EAAEC,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,EAAL,CADI,EAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKC,MAAL,CAFI,EAGJ;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4BC,KAA5B,CAHI,CAAR;AAKH,OAPA,CADL,CARI,CAAR;AAmBH;AACJ;;AA5CmC;;AA+CxC,MAAMC,eAAe,GAAGd,KAAK,KAAK;AAC9BG,EAAAA,KAAK,EAAEH,KAAK,CAACe,mBAAN,CAA0BZ;AADH,CAAL,CAA7B;;AAGA,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACpCX,EAAAA,QAAQ,EAAGH,KAAD,IAAW;AACjBc,IAAAA,QAAQ,CAACvB,WAAW,CAACS,KAAD,CAAZ,CAAR;AACH;AAHmC,CAAL,CAAnC;;AAMA,eAAeR,OAAO,CAACmB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CpB,SAA7C,CAAf","sourcesContent":["import React from 'react';\nimport service from '../Service/service';\nimport { getAllPosts } from '../Actions/postAction';\nimport { connect } from \"react-redux\";\n\n\nclass PostsList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: false\n        };\n    }\n\n    async componentDidMount() {\n    \n        let posts = null;\n        posts = await service.getAllPosts();\n        console.log(posts);\n        this.props.getPosts(posts);\n        this.setState({ isLoaded: true });\n    }\n\n    render() {\n        let { isLoaded } = this.state;\n        if (!isLoaded) {\n            return <div>Loading..</div>;\n        }\n        else {\n            return (<table className='posts'>\n                <thead>\n                    <tr>\n                        <th>PostID</th>\n                        <th>UserID</th>\n                        <th>Description</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.props.posts.map(post => {\n                        const { id, userId, title } = post;\n                        return (<tr key={id}>\n                            <td>{id}</td>\n                            <td>{userId}</td>\n                            <td className='post-title'>{title}</td>\n                        </tr>);\n                    })}\n                </tbody>\n            </table>);\n        }\n    }\n}\n\nconst mapStateToProps = state => ({\n    posts: state.postsRequestResults.posts\n});\nconst mapDispatchToProps = dispatch => ({\n    getPosts: (posts) => {\n        dispatch(getAllPosts(posts));\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostsList);\n"]},"metadata":{},"sourceType":"module"}