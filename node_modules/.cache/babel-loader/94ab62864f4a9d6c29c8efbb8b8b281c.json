{"ast":null,"code":"var _jsxFileName = \"/home/dellvostro253/Desktop/posts/src/Context/postContext.js\";\nimport React, { createContext, Component } from 'react';\nimport axios from 'axios';\nexport const PostsContext = createContext();\n\nclass PostsContextProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updatePost = id => {\n      this.setState({\n        activePost: this.state.posts.find(el => el.id === id)\n      });\n    };\n\n    this.state = {\n      posts: [],\n      activePost: null,\n      updatePost: this.updatePost\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.posts.length && this.props.location.pathname === '/posts') {\n      try {\n        axios.get(`https://jsonplaceholder.typicode.com/posts`).then(res => {\n          this.setState({\n            posts: res.data\n          });\n        });\n      } catch (error) {\n        throw new Error('No post data');\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(PostsContext.Provider, {\n      value: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nexport default PostsContextProvider;","map":{"version":3,"sources":["/home/dellvostro253/Desktop/posts/src/Context/postContext.js"],"names":["React","createContext","Component","axios","PostsContext","PostsContextProvider","constructor","props","updatePost","id","setState","activePost","state","posts","find","el","componentDidMount","length","location","pathname","get","then","res","data","error","Error","render","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,SAA9B,QAA8C,OAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAGH,aAAa,EAAlC;;AAEP,MAAMI,oBAAN,SAAmCH,SAAnC,CAA6C;AAEzCI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AAEA,SAAKC,UAAL,GAAkBC,EAAE,IAAI;AAAC,WAAKC,QAAL,CAAc;AAACC,QAAAA,UAAU,EAAE,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,IAAjB,CAAsBC,EAAE,IAAIA,EAAE,CAACN,EAAH,KAAUA,EAAtC;AAAb,OAAd;AAAuE,KAAhG;;AAEA,SAAKG,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETF,MAAAA,UAAU,EAAE,IAFH;AAGTH,MAAAA,UAAU,EAAE,KAAKA;AAHR,KAAb;AAKH;;AAIDQ,EAAAA,iBAAiB,GAAG;AAEhB,QAAG,CAAC,KAAKJ,KAAL,CAAWC,KAAX,CAAiBI,MAAlB,IAA4B,KAAKV,KAAL,CAAWW,QAAX,CAAoBC,QAApB,KAAiC,QAAhE,EAAyE;AACrE,UAAG;AACHhB,QAAAA,KAAK,CAACiB,GAAN,CAAW,4CAAX,EAAwDC,IAAxD,CAA6DC,GAAG,IAAI;AAChE,eAAKZ,QAAL,CAAc;AAAEG,YAAAA,KAAK,EAAES,GAAG,CAACC;AAAb,WAAd;AACH,SAFD;AAIH,OALG,CAKF,OAAMC,KAAN,EAAa;AACX,cAAM,IAAIC,KAAJ,CAAU,cAAV,CAAN;AACH;AACA;AAEJ;;AAGDC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAE,KAAKd,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKL,KAAL,CAAWoB,QADhB,CADJ;AAKH;;AAtCwC;;AAyC7C,eAAetB,oBAAf","sourcesContent":["import React, {createContext, Component} from 'react';\nimport axios from 'axios';\n\nexport const PostsContext = createContext();\n\nclass PostsContextProvider extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.updatePost = id => {this.setState({activePost: this.state.posts.find(el => el.id === id)})}\n\n        this.state = {\n            posts: [],\n            activePost: null,\n            updatePost: this.updatePost\n         }\n    }\n\n    \n\n    componentDidMount() {\n\n        if(!this.state.posts.length && this.props.location.pathname === '/posts'){\n            try{\n            axios.get(`https://jsonplaceholder.typicode.com/posts`).then(res => {\n                this.setState({ posts: res.data})\n            }) \n\n        } catch(error) {\n            throw new Error('No post data'); \n        }\n        }\n        \n    }\n\n\n    render() {\n        return(\n            <PostsContext.Provider value={this.state}>\n                {this.props.children}\n            </PostsContext.Provider>\n        )\n    }\n}\n\nexport default PostsContextProvider;"]},"metadata":{},"sourceType":"module"}