{"ast":null,"code":"import _classCallCheck from \"/home/dellvostro253/Desktop/posts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dellvostro253/Desktop/posts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dellvostro253/Desktop/posts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dellvostro253/Desktop/posts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dellvostro253/Desktop/posts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dellvostro253/Desktop/posts/src/Components/postsList.js\";\nimport React from 'react'; //import axios from 'axios';\n\nimport './style.css';\nimport { Link } from 'react-router-dom';\nimport { PostsContext } from '../Context/postContext';\n\nvar PostsList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PostsList, _React$Component);\n\n  function PostsList(props) {\n    var _this;\n\n    _classCallCheck(this, PostsList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostsList).call(this, props));\n    _this.state = {\n      posts: [],\n      isLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(PostsList, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.state.posts.length === 0) {\n        this.setState({\n          posts: this.context,\n          isLoaded: true\n        });\n      }\n\n      console.log(this.context);\n      console.log(this.state.posts);\n    }\n  }, {\n    key: \"renderTableData\",\n    value: function renderTableData() {\n      console.log(this.state.posts);\n\n      for (var post in this.state.posts) {\n        var id = post.id,\n            userId = post.userId,\n            title = post.title;\n        return React.createElement(\"tr\", {\n          key: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/post-info/\".concat(id, \"/\").concat(userId),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, id)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, userId), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, title));\n      }\n      /*this.state.posts.map(post => { \n      const { id, userId, title } = post \n      return (\n           <tr key={id}>\n            <Link to={`/post-info/${id}/${userId}`}><td>{id}</td></Link>\n           <td>{userId}</td>\n           <td>{title}</td>\n          </tr> \n      )\n      })*/\n\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isLoaded = this.state.isLoaded;\n\n      if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, \"Loading..\");\n      } else {\n        return React.createElement(\"table\", {\n          id: \"posts\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, this.renderTableData()));\n      }\n    }\n  }]);\n\n  return PostsList;\n}(React.Component);\n\nPostsList.contextType = PostsContext;\nexport { PostsList as default };","map":{"version":3,"sources":["/home/dellvostro253/Desktop/posts/src/Components/postsList.js"],"names":["React","Link","PostsContext","PostsList","props","state","posts","isLoaded","length","setState","context","console","log","post","id","userId","title","renderTableData","Component","contextType"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,aAAP;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,YAAR,QAA2B,wBAA3B;;IAEqBC,S;;;;;AAIjB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAFe;AAMlB;;;;yCAEqB;AACjB,UAAI,KAAKF,KAAL,CAAWC,KAAX,CAAiBE,MAAjB,KAA4B,CAAhC,EAAoC;AAChC,aAAKC,QAAL,CAAc;AACVH,UAAAA,KAAK,EAAE,KAAKI,OADF;AAEVH,UAAAA,QAAQ,EAAE;AAFA,SAAd;AAIJ;;AACFI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,OAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWC,KAAvB;AACD;;;sCAEgB;AACXK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWC,KAAvB;;AACA,WAAK,IAAIO,IAAT,IAAiB,KAAKR,KAAL,CAAWC,KAA5B,EAAkC;AAAA,YACzBQ,EADyB,GACHD,IADG,CACzBC,EADyB;AAAA,YACrBC,MADqB,GACHF,IADG,CACrBE,MADqB;AAAA,YACbC,KADa,GACHH,IADG,CACbG,KADa;AAEjC,eACQ;AAAI,UAAA,GAAG,EAAEF,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,IAAD;AAAM,UAAA,EAAE,uBAAgBA,EAAhB,cAAsBC,MAAtB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,EAAL,CAAxC,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKC,MAAL,CAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKC,KAAL,CAHA,CADR;AAOA;AAAA;;;;;;;;;;;AAWN;;;6BAEO;AAAA,UAECT,QAFD,GAEc,KAAKF,KAFnB,CAECE,QAFD;;AAGL,UAAG,CAACA,QAAJ,EAAc;AACV,eAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAN;AACH,OAFD,MAEO;AACH,eACA;AAAO,UAAA,EAAE,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAKU,eAAL,EADH,CADJ,CADA;AAOF;AACL;;;;EA7DkCjB,KAAK,CAACkB,S;;AAAxBf,S,CAEbgB,W,GAAcjB,Y;SAFDC,S","sourcesContent":["import React from 'react';\n//import axios from 'axios';\nimport './style.css';\nimport {Link} from 'react-router-dom';\nimport {PostsContext} from '../Context/postContext';\n\nexport default class PostsList extends React.Component {\n\n static contextType = PostsContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            posts: [], \n            isLoaded: false\n        }\n    }\n\n     componentDidUpdate() {\n         if((this.state.posts.length === 0)) {\n             this.setState({\n                 posts: this.context,\n                 isLoaded: true \n            })\n        }\n       console.log(this.context);\n       console.log(this.state.posts)\n     }\n\n    renderTableData() {\n           console.log(this.state.posts)    \n           for (let post in this.state.posts){\n            const { id, userId, title } = post \n            return (\n                    <tr key={id}>\n                    <Link to={`/post-info/${id}/${userId}`}><td>{id}</td></Link>\n                    <td>{userId}</td>\n                    <td>{title}</td>\n                    </tr> \n                )\n           }/*this.state.posts.map(post => { \n           const { id, userId, title } = post \n           return (\n                 <tr key={id}>\n                  <Link to={`/post-info/${id}/${userId}`}><td>{id}</td></Link>\n                 <td>{userId}</td>\n                 <td>{title}</td>\n                </tr> \n           )\n        })*/\n        \n     }\n\n    render() {\n\n        let { isLoaded } = this.state;\n        if(!isLoaded) {\n            return<div>Loading..</div>\n        } else {\n            return (\n            <table id='posts'>\n                <tbody>\n                  {this.renderTableData()}\n                </tbody>\n              \n            </table>\n        )}\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}