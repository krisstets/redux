{"ast":null,"code":"var _jsxFileName = \"/home/dellvostro253/Desktop/redux/src/Components/postInfo.js\";\nimport React from 'react';\nimport './style.css';\nimport service from '../Service/service';\nimport { getAllUsers } from '../Actions/userAction';\nimport { connect } from 'react-redux';\n\nclass PostInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const users = await service.getAllUsers();\n      this.props.getUsers(users);\n      this.setState({\n        isLoaded: true\n      });\n      console.log(users);\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  render() {\n    let {\n      isLoaded\n    } = this.state;\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Loading..\");\n    }\n    /*else {\n      return (\n          <div>\n              <div className=\"card\">\n                  <h2>About Post:</h2> \n                  <p className='post-info'>{this.state.posts.body}</p>\n              </div>\n              <div className=\"card\">\n                  <h2>About User</h2>\n               <ul className=\"user-info\">\n                      <li><p>ID</p>{this.state.user.id}</li>\n                      <li><p>Name</p>{this.state.user.name}</li>\n                      <li><p>Username</p>{this.state.user.username}</li>\n                      <li><p>Email</p>{this.state.user.email}</li>\n                  </ul>\n              </div>\n          </div>\n       )\n    }*/\n\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  users: state.usersRequestResults.users\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getUsers: users => {\n    dispatch(getAllUsers(users));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostInfo);","map":{"version":3,"sources":["/home/dellvostro253/Desktop/redux/src/Components/postInfo.js"],"names":["React","service","getAllUsers","connect","PostInfo","Component","constructor","props","state","isLoaded","componentDidMount","users","getUsers","setState","console","log","error","Error","render","mapStateToProps","usersRequestResults","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAAQC,WAAR,QAA0B,uBAA1B;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAGC,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AAEpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AAED,QAAMC,iBAAN,GAA0B;AAEtB,QAAI;AACA,YAAMC,KAAK,GAAG,MAAMV,OAAO,CAACC,WAAR,EAApB;AACA,WAAKK,KAAL,CAAWK,QAAX,CAAoBD,KAApB;AACA,WAAKE,QAAL,CAAc;AACVJ,QAAAA,QAAQ,EAAE;AADA,OAAd;AAGAK,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACH,KAPD,CAOE,OAAMK,KAAN,EAAa;AACX,YAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACH;AACJ;;AAEDE,EAAAA,MAAM,GAAG;AACL,QAAI;AAAET,MAAAA;AAAF,QAAe,KAAKD,KAAxB;;AACA,QAAG,CAACC,QAAJ,EAAc;AACV,aAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAN;AACH;AAAC;;;;;;;;;;;;;;;;;;;;AAmBL;;AA9CmC;;AAkDxC,MAAMU,eAAe,GAAGX,KAAK,KAAK;AAC9BG,EAAAA,KAAK,EAAEH,KAAK,CAACY,mBAAN,CAA0BT;AADH,CAAL,CAA7B;;AAGA,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACpCV,EAAAA,QAAQ,EAAGD,KAAD,IAAW;AACjBW,IAAAA,QAAQ,CAACpB,WAAW,CAACS,KAAD,CAAZ,CAAR;AACH;AAHmC,CAAL,CAAnC;;AAMA,eAAeR,OAAO,CAACgB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CjB,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport './style.css';\nimport service from '../Service/service';\nimport {getAllUsers} from '../Actions/userAction';\nimport {connect} from 'react-redux';\n\n\n class PostInfo extends React.Component {\n \n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: false,\n        }\n    }\n\n    async componentDidMount() {\n       \n        try {\n            const users = await service.getAllUsers();\n            this.props.getUsers(users);\n            this.setState({\n                isLoaded: true\n            })\n            console.log(users)\n        } catch(error) {\n            throw new Error(error); \n        }\n    }\n\n    render() {\n        let { isLoaded } = this.state;\n        if(!isLoaded) {\n            return<div>Loading..</div>\n        } /*else {\n            return (\n                <div>\n                    <div className=\"card\">\n                        <h2>About Post:</h2> \n                        <p className='post-info'>{this.state.posts.body}</p>\n                    </div>\n                    <div className=\"card\">\n                        <h2>About User</h2>\n                     <ul className=\"user-info\">\n                            <li><p>ID</p>{this.state.user.id}</li>\n                            <li><p>Name</p>{this.state.user.name}</li>\n                            <li><p>Username</p>{this.state.user.username}</li>\n                            <li><p>Email</p>{this.state.user.email}</li>\n                        </ul>\n                    </div>\n                </div>\n             )\n        }*/\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    users: state.usersRequestResults.users\n});\nconst mapDispatchToProps = dispatch => ({\n    getUsers: (users) => {\n        dispatch(getAllUsers(users));\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostInfo);"]},"metadata":{},"sourceType":"module"}