{"ast":null,"code":"import _classCallCheck from \"/home/dellvostro253/Desktop/test-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dellvostro253/Desktop/test-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dellvostro253/Desktop/test-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dellvostro253/Desktop/test-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dellvostro253/Desktop/test-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dellvostro253/Desktop/test-app/src/Components/postsList.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport './style.css';\nimport { Link } from 'react-router-dom';\n\nvar PostsList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PostsList, _React$Component);\n\n  function PostsList(props) {\n    var _this;\n\n    _classCallCheck(this, PostsList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostsList).call(this, props));\n    _this.state = {\n      posts: [],\n      isLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(PostsList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      try {\n        axios.get(\"https://jsonplaceholder.typicode.com/posts\").then(function (res) {\n          _this2.setState({\n            posts: res.data\n          });\n        });\n      } catch (error) {\n        this.setState({\n          isLoaded: true\n        });\n      }\n    }\n  }, {\n    key: \"renderTableData\",\n    value: function renderTableData() {\n      return this.state.posts.map(function (post, index) {\n        var id = post.id,\n            userId = post.userId,\n            title = post.title;\n        return React.createElement(\"tr\", {\n          key: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/post-info/\".concat(id, \"/\").concat(userId),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, id)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, userId), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, title));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isLoaded = this.state;\n\n      if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \"Loading..\");\n      } else {\n        return React.createElement(\"table\", {\n          id: \"posts\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, this.renderTableData()));\n      }\n    }\n  }]);\n\n  return PostsList;\n}(React.Component);\n\nexport { PostsList as default };","map":{"version":3,"sources":["/home/dellvostro253/Desktop/test-app/src/Components/postsList.js"],"names":["React","axios","Link","PostsList","props","state","posts","isLoaded","get","then","res","setState","data","error","map","post","index","id","userId","title","renderTableData","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;IAEqBC,S;;;;;AAEjB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAFe;AAMlB;;;;wCAEmB;AAAA;;AAChB,UAAG;AACCN,QAAAA,KAAK,CAACO,GAAN,+CAAwDC,IAAxD,CAA6D,UAAAC,GAAG,EAAI;AACpE,UAAA,MAAI,CAACC,QAAL,CAAc;AAAEL,YAAAA,KAAK,EAAEI,GAAG,CAACE;AAAb,WAAd;AACC,SAFD;AAGH,OAJD,CAIE,OAAMC,KAAN,EAAa;AACX,aAAKF,QAAL,CAAc;AACVJ,UAAAA,QAAQ,EAAE;AADA,SAAd;AAGH;AAEJ;;;sCAEiB;AACd,aAAO,KAAKF,KAAL,CAAWC,KAAX,CAAiBQ,GAAjB,CAAqB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAAA,YAClCC,EADkC,GACZF,IADY,CAClCE,EADkC;AAAA,YAC9BC,MAD8B,GACZH,IADY,CAC9BG,MAD8B;AAAA,YACtBC,KADsB,GACZJ,IADY,CACtBI,KADsB;AAE1C,eACM;AAAI,UAAA,GAAG,EAAEF,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC,oBAAC,IAAD;AAAM,UAAA,EAAE,uBAAgBA,EAAhB,cAAsBC,MAAtB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,EAAL,CAAxC,CADD,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKC,MAAL,CAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKC,KAAL,CAHA,CADN;AAOF,OATM,CAAP;AAUF;;;6BAEO;AAEL,UAAIZ,QAAQ,GAAG,KAAKF,KAApB;;AACA,UAAG,CAACE,QAAJ,EAAc;AACV,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACH,OAFD,MAEO;AACH,eACA;AAAO,UAAA,EAAE,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAKa,eAAL,EADH,CADJ,CADA;AAOF;AAEL;;;;EAnDkCpB,KAAK,CAACqB,S;;SAAxBlB,S","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport './style.css';\nimport {Link} from 'react-router-dom';\n\nexport default class PostsList extends React.Component {\n \n    constructor(props) {\n        super(props);\n        this.state = {\n            posts: [],\n            isLoaded: false\n        }\n    }\n\n    componentDidMount() {\n        try{\n            axios.get(`https://jsonplaceholder.typicode.com/posts`).then(res => {\n            this.setState({ posts: res.data });\n            }); \n        } catch(error) {\n            this.setState({\n                isLoaded: true\n            })\n        }\n\n    }\n\n    renderTableData() {\n        return this.state.posts.map((post, index) => {\n           const { id, userId, title } = post \n           return (\n                 <tr key={id}>\n                  <Link to={`/post-info/${id}/${userId}`}><td>{id}</td></Link>\n                 <td>{userId}</td>\n                 <td>{title}</td>\n              </tr> \n           )\n        })\n     }\n\n    render() {\n\n        let isLoaded = this.state;\n        if(!isLoaded) {\n            return <div>Loading..</div>\n        } else {\n            return (\n            <table id='posts'>\n                <tbody>\n                  {this.renderTableData()}\n                </tbody>\n              \n            </table>\n        )}\n        \n    }\n}"]},"metadata":{},"sourceType":"module"}