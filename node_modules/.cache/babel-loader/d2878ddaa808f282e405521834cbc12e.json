{"ast":null,"code":"var _jsxFileName = \"/home/dellvostro253/Desktop/redux/src/Components/postInfo.js\";\nimport React from 'react';\nimport './style.css';\nimport service from '../Service/service';\nimport { getAllUsers } from '../Actions/userAction';\nimport { connect } from 'react-redux';\n\nclass PostInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const users = await service.getAllUsers();\n      this.props.getUsers(users);\n      this.setState({\n        isLoaded: true\n      });\n    } catch (error) {\n      throw new Error(error);\n    }\n\n    console.log(matchParams); // console.log(store.getState)\n  }\n\n  render() {\n    let {\n      isLoaded\n    } = this.state;\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Loading..\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"About Post:\"), React.createElement(\"p\", {\n        className: \"post-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, this.props.posts.body.filter(post => {\n        const matchParams = this.props.match.params;\n        post.id === parseInt(this.matchParams.postId);\n      }))), React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"About User\")));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  users: state.usersRequestResults.users,\n  posts: state.postsRequestResults.posts\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getUsers: users => {\n    dispatch(getAllUsers(users));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostInfo);","map":{"version":3,"sources":["/home/dellvostro253/Desktop/redux/src/Components/postInfo.js"],"names":["React","service","getAllUsers","connect","PostInfo","Component","constructor","props","state","isLoaded","componentDidMount","users","getUsers","setState","error","Error","console","log","matchParams","render","posts","body","filter","post","match","params","id","parseInt","postId","mapStateToProps","usersRequestResults","postsRequestResults","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAAQC,WAAR,QAA0B,uBAA1B;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAGC,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AAEpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AAED,QAAMC,iBAAN,GAA0B;AAGtB,QAAI;AACA,YAAMC,KAAK,GAAG,MAAMV,OAAO,CAACC,WAAR,EAApB;AACA,WAAKK,KAAL,CAAWK,QAAX,CAAoBD,KAApB;AACA,WAAKE,QAAL,CAAc;AACVJ,QAAAA,QAAQ,EAAE;AADA,OAAd;AAIH,KAPD,CAOE,OAAMK,KAAN,EAAa;AACX,YAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACH;;AACDE,IAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ,EAbsB,CAcvB;AAEF;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAI;AAAEV,MAAAA;AAAF,QAAe,KAAKD,KAAxB;;AAEA,QAAG,CAACC,QAAJ,EAAc;AACV,aAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAN;AACH,KAFD,MAEO;AACH,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADN,EAEM;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA,KAAKF,KAAL,CAAWa,KAAX,CAAiBC,IAAjB,CAAsBC,MAAtB,CACAC,IAAI,IAAI;AACR,cAAML,WAAW,GAAG,KAAKX,KAAL,CAAWiB,KAAX,CAAiBC,MAArC;AACAF,QAAAA,IAAI,CAACG,EAAL,KAAYC,QAAQ,CAAC,KAAKT,WAAL,CAAiBU,MAAlB,CAApB;AAA8C,OAH9C,CAFA,CAFN,CADF,EAWI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CAXJ,CADJ;AAkBH;AACJ;;AApDmC;;AAwDxC,MAAMC,eAAe,GAAGrB,KAAK,KAAK;AAC9BG,EAAAA,KAAK,EAAEH,KAAK,CAACsB,mBAAN,CAA0BnB,KADH;AAE9BS,EAAAA,KAAK,EAAEZ,KAAK,CAACuB,mBAAN,CAA0BX;AAFH,CAAL,CAA7B;;AAMA,MAAMY,kBAAkB,GAAGC,QAAQ,KAAK;AACpCrB,EAAAA,QAAQ,EAAGD,KAAD,IAAW;AACjBsB,IAAAA,QAAQ,CAAC/B,WAAW,CAACS,KAAD,CAAZ,CAAR;AACH;AAHmC,CAAL,CAAnC;;AAOA,eAAeR,OAAO,CAAC0B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C5B,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport './style.css';\nimport service from '../Service/service';\nimport {getAllUsers} from '../Actions/userAction';\nimport {connect} from 'react-redux';\n\n\n class PostInfo extends React.Component {\n \n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: false,\n        }\n    }\n\n    async componentDidMount() {\n       \n\n        try {\n            const users = await service.getAllUsers();\n            this.props.getUsers(users);\n            this.setState({\n                isLoaded: true\n            })\n           \n        } catch(error) {\n            throw new Error(error); \n        }\n        console.log(matchParams)\n       // console.log(store.getState)\n\n    }\n\n    render() {\n        let { isLoaded } = this.state;\n         \n        if(!isLoaded) {\n            return<div>Loading..</div>\n        } else {\n            return (\n                <div>\n                  <div className=\"card\">\n                        <h2>About Post:</h2> \n                        <p className='post-info'>{\n                        \n                        this.props.posts.body.filter(\n                        post => {\n                        const matchParams = this.props.match.params; \n                        post.id === parseInt(this.matchParams.postId)})}\n                        </p>\n                    </div>\n                    <div className=\"card\">\n                        <h2>About User</h2>\n                    \n                    </div>  \n                </div>\n             )\n        }\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    users: state.usersRequestResults.users,\n    posts: state.postsRequestResults.posts\n});\n\n\nconst mapDispatchToProps = dispatch => ({\n    getUsers: (users) => {\n        dispatch(getAllUsers(users));\n    }\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostInfo);"]},"metadata":{},"sourceType":"module"}