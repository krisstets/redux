{"ast":null,"code":"import _classCallCheck from \"/home/dellvostro253/Desktop/posts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dellvostro253/Desktop/posts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dellvostro253/Desktop/posts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dellvostro253/Desktop/posts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dellvostro253/Desktop/posts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dellvostro253/Desktop/posts/src/Components/postsList.js\";\nimport React from 'react';\nimport './style.css';\nimport { Link } from 'react-router-dom';\nimport { PostsContext } from '../Context/postContext';\n\nvar PostsList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PostsList, _React$Component);\n\n  function PostsList(props) {\n    var _this;\n\n    _classCallCheck(this, PostsList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostsList).call(this, props));\n    _this.state = {\n      posts: [],\n      isLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(PostsList, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.context) {\n        this.setState({\n          posts: this.context,\n          isLoaded: true\n        });\n      }\n    }\n  }, {\n    key: \"renderTableData\",\n    value: function renderTableData() {\n      return this.state.posts.map(function (post) {\n        var id = post.id,\n            userId = post.userId,\n            title = post.title;\n        eturn(React.createElement(\"tr\", {\n          key: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/post-info/\".concat(id, \"/\").concat(userId),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, id)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, userId), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, title)));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isLoaded = this.state.isLoaded;\n\n      if (isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"Loading..\");\n      } else {\n        return React.createElement(\"table\", {\n          id: \"posts\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, this.renderTableData()));\n      }\n    }\n  }]);\n\n  return PostsList;\n}(React.Component);\n\nPostsList.contextType = PostsContext;\nexport { PostsList as default };","map":{"version":3,"sources":["/home/dellvostro253/Desktop/posts/src/Components/postsList.js"],"names":["React","Link","PostsContext","PostsList","props","state","posts","isLoaded","context","setState","map","post","id","userId","title","eturn","renderTableData","Component","contextType"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,YAAR,QAA2B,wBAA3B;;IAEqBC,S;;;;;AAIjB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAFe;AAMlB;;;;yCAEqB;AACjB,UAAG,KAAKC,OAAR,EAAiB;AACb,aAAKC,QAAL,CAAc;AACVH,UAAAA,KAAK,EAAE,KAAKE,OADF;AAEVD,UAAAA,QAAQ,EAAE;AAFA,SAAd;AAIH;AACJ;;;sCAEgB;AACd,aAAO,KAAKF,KAAL,CAAWC,KAAX,CAAiBI,GAAjB,CAAqB,UAAAC,IAAI,EAAI;AAAA,YAC5BC,EAD4B,GACND,IADM,CAC5BC,EAD4B;AAAA,YACxBC,MADwB,GACNF,IADM,CACxBE,MADwB;AAAA,YAChBC,KADgB,GACNH,IADM,CAChBG,KADgB;AAEhCC,QAAAA,KAAK,CACD;AAAI,UAAA,GAAG,EAAEH,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,IAAD;AAAM,UAAA,EAAE,uBAAgBA,EAAhB,cAAsBC,MAAtB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,EAAL,CAAxC,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKC,MAAL,CAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKC,KAAL,CAHA,CADC,CAAL;AAOH,OATM,CAAP;AAYF;;;6BAEO;AAAA,UACCP,QADD,GACc,KAAKF,KADnB,CACCE,QADD;;AAEL,UAAGA,QAAH,EAAa;AACT,eAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAN;AACH,OAFD,MAEO;AACH,eACA;AAAO,UAAA,EAAE,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAKS,eAAL,EADH,CADJ,CADA;AAOF;AACL;;;;EAjDkChB,KAAK,CAACiB,S;;AAAxBd,S,CAEbe,W,GAAchB,Y;SAFDC,S","sourcesContent":["import React from 'react';\nimport './style.css';\nimport {Link} from 'react-router-dom';\nimport {PostsContext} from '../Context/postContext';\n\nexport default class PostsList extends React.Component {\n\n static contextType = PostsContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            posts: [], \n            isLoaded: false\n        }\n    }\n\n     componentDidUpdate() {\n         if(this.context) {\n             this.setState({\n                 posts: this.context,\n                 isLoaded: true\n             })\n         }\n     }\n\n    renderTableData() {\n        return this.state.posts.map(post => { \n        const { id, userId, title } = post \n            eturn (\n                <tr key={id}>\n                <Link to={`/post-info/${id}/${userId}`}><td>{id}</td></Link>\n                <td>{userId}</td>\n                <td>{title}</td>\n                </tr> \n                )\n        })\n        \n      \n     }\n\n    render() {\n        let { isLoaded } = this.state;\n        if(isLoaded) {\n            return<div>Loading..</div>\n        } else {\n            return (\n            <table id='posts'>\n                <tbody>\n                  {this.renderTableData()}\n                </tbody>\n              \n            </table>\n        )}\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}