{"ast":null,"code":"var _jsxFileName = \"/home/dellvostro253/Desktop/redux/src/Components/postInfo.js\";\nimport React from 'react';\nimport './style.css';\nimport service from '../Service/service';\nimport { getAllUsers } from '../Actions/userAction';\nimport { connect } from 'react-redux';\nimport { store } from '../index';\n\nclass PostInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      //const matchParams = this.params;\n      const users = await service.getAllUsers();\n      const user = users.map(user => user.id === parseInt(this.props.match.userId));\n      console.log(users);\n      this.props.getUsers(users);\n      this.setState({\n        isLoaded: true\n      });\n    } catch (error) {\n      throw new Error(error);\n    } //console.log(matchParams)\n\n\n    console.log(store.getState());\n  }\n\n  render() {\n    let {\n      isLoaded\n    } = this.state;\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Loading..\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"About Post:\"), React.createElement(\"p\", {\n        className: \"post-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"About User:\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"ID:\", this.state.users.id), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Name:\", this.state.users.name), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Username:\", this.state.users.username), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Email:\", this.state.users.email)))), React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"About User\")));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  users: state.usersRequestResults.users,\n  posts: state.postsRequestResults.posts\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getUsers: users => {\n    dispatch(getAllUsers(users));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostInfo);","map":{"version":3,"sources":["/home/dellvostro253/Desktop/redux/src/Components/postInfo.js"],"names":["React","service","getAllUsers","connect","store","PostInfo","Component","constructor","props","state","isLoaded","componentDidMount","users","user","map","id","parseInt","match","userId","console","log","getUsers","setState","error","Error","getState","render","name","username","email","mapStateToProps","usersRequestResults","posts","postsRequestResults","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './style.css';\nimport service from '../Service/service';\nimport {getAllUsers} from '../Actions/userAction';\nimport {connect} from 'react-redux';\nimport {store} from '../index'\n\n\n class PostInfo extends React.Component {\n \n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: false,\n        }\n    }\n\n    async componentDidMount() {\n        \n        try {\n            \n            //const matchParams = this.params;\n\n            const users = await service.getAllUsers();\n            const user = users.map(user => user.id === parseInt(this.props.match.userId))\n            console.log(users)\n            this.props.getUsers(users);\n            this.setState({\n                isLoaded: true\n            })\n           \n        } catch(error) {\n            throw new Error(error); \n        }\n        //console.log(matchParams)\n        console.log(store.getState())\n\n    }\n\n    render() {\n        let { isLoaded } = this.state;\n        if(!isLoaded) {\n            return<div>Loading..</div>\n        } else {\n            return (\n                <div>\n                  <div className=\"card\">\n                        <h2>About Post:</h2> \n                        <p className='post-info'>\n                        <ul>\n                    <li>About User:</li>\n                    <li>ID:{this.state.users.id}</li>\n                    <li>Name:{this.state.users.name}</li>\n                    <li>Username:{this.state.users.username}</li>\n                    <li>Email:{this.state.users.email}</li>\n                </ul>\n                        </p>\n                    </div>\n                    <div className=\"card\">\n                        <h2>About User</h2>\n                      \n                    </div>  \n                </div>\n             )\n        }\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    users: state.usersRequestResults.users,\n    posts: state.postsRequestResults.posts\n});\n\n\nconst mapDispatchToProps = dispatch => ({\n    getUsers: (users) => {\n        dispatch(getAllUsers(users));\n    }\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostInfo);"]},"metadata":{},"sourceType":"module"}